{Application 'LISTING' logic file generated by CSPro}
PROC GLOBAL

string hh_label;

function string staff_segment(string staff_id_code)
	loadcase(STAFF_DICT,staff_id_code);
	staff_segment = STAFF_SEG;
end;

PROC LABOURF_FORCE_LISTING_FF

PROC REGION

preproc
		// Retreive parameters from menu program via pff file
	if sysparm("REGION") <> "" then
		REGION = tonumber(sysparm("REGION"));
		// protect field so the interviewer cannot modify it
		setproperty(REGION, "Protected","Yes");
	endif;

PROC DISTRICT



preproc
	// Retreive parameters from menu program via pff file
	if sysparm("DISTRICT") <> "" then
		DISTRICT = tonumber(sysparm("DISTRICT"));
		// protect field so the interviewer cannot modify it
		setproperty(DISTRICT, "Protected","Yes");
	endif;
{
valueset numeric District_vs;

forcase DISTRICTS_DICT where REGCODE = REGION  do 

	//errmsg("district code %d District name %s", DISTRCODE, DISTRNAME);
	District_vs.add(DISTRNAME,DISTRCODE);
endfor;

setvalueset($,District_vs);
}
PROC T_A_STA_OR_TOWN




preproc
	// Retreive parameters from menu program via pff file
	if sysparm("T_A_STA_OR_TOWN") <> "" then
		T_A_STA_OR_TOWN = tonumber(sysparm("T_A_STA_OR_TOWN"));
		// protect field so the interviewer cannot modify it
		setproperty(T_A_STA_OR_TOWN, "Protected","Yes");
	endif;


{
onfocus

valueset numeric T_A_STA_OR_TOWN_vs;

forcase TRADITIONAL_AUTHORITIES_DICT where REGION_CODE =  REGION and DISTRICT_CODE = DISTRICT do
	T_A_STA_OR_TOWN_vs.add(TA_NAME, TA_CODE);
	endfor;
	
	setvalueset($,T_A_STA_OR_TOWN_vs);

}
PROC ENUMERATION_AREA_NO

preproc
	// Retreive parameters from menu program via pff file
	if sysparm("ENUMERATION_AREA_NO") <> "" then
		ENUMERATION_AREA_NO = tonumber(sysparm("ENUMERATION_AREA_NO"));
		// protect field so the interviewer cannot modify it
		setproperty(ENUMERATION_AREA_NO, "Protected","Yes");
	endif;
PROC RESIDENCE

preproc
	$ = 1;
	setproperty(RESIDENCE, "Protected","Yes");

	
PROC START_TIME
preproc 
	if $ = Notappl then 
		$= timestamp();
	endif;
	
	
noinput;
PROC NAME_OF_THE_INTERVIEWER

preproc
	// Retreive parameters from menu program via pff file
	if sysparm("NAME_OF_THE_INTERVIEWER") <> "" then
		NAME_OF_THE_INTERVIEWER = sysparm("NAME_OF_THE_INTERVIEWER");
		// protect field so the interviewer cannot modify it
		setproperty(NAME_OF_THE_INTERVIEWER, "Protected","Yes");
	endif;
PROC DATE_OF_INTERVIEW
preproc 
	if $ = Notappl then 
		$= sysdate("YYYYMMDD");
	endif;
noinput;
//PROC REGION


PROC INTERVIEWER_ID_CODE


preproc
	// Retreive parameters from menu program via pff file
	if sysparm("INTERVIEWER_ID_CODE") <> "" then
		INTERVIEWER_ID_CODE = sysparm("INTERVIEWER_ID_CODE");
		// protect field so the interviewer cannot modify it
		setproperty(INTERVIEWER_ID_CODE, "Protected","Yes");
	endif;
PROC STRUCTURE_NUMBER

preproc  
	
	STRUCTURE_NUMBER = curocc();
	setproperty($, "Protected", "Yes");
	
PROC COMMN_HH_NAME

preproc
	ask if STRCT_TYP(curocc()) = 1;
PROC HH_MEMBERS_TOTAL



if HH_MEMBERS_TOTAL < 1 then
	errmsg("There must be at least a member in a household");
	reenter;
endif;
PROC HH_MEMBERS_AGE_5_17

preproc
	ask if STRCT_TYP(curocc()) = 1;

postproc
	
	if HH_MEMBERS_AGE_5_17 > HH_MEMBERS_TOTAL then
		errmsg("Number of members aged 5 to 17 can't exceed total number of household members");
		reenter
	endif;
PROC PLACE_GVH


onfocus

valueset numeric gvh_vs;

forcase GVH_DICT where REGION_CODE_GVH =  REGION and DISTRICT_CODE_GVH = DISTRICT and TA_CODE_GVH = T_A_STA_OR_TOWN do
	gvh_vs.add(GVH_NAME, GVH_CODE);
	endfor;
	
	gvh_vs.add("Add GVH", 999);
	
	setvalueset($,gvh_vs);

PROC OTHER_GVH
preproc
	
	ask if PLACE_GVH = 999;
PROC PLACE_VLG

onfocus

valueset numeric vh_vs;

	forcase VH_DICT where REG_CODE_VLG =  REGION and DIST_CODE_VLG = DISTRICT and TA_CODE_VLG = T_A_STA_OR_TOWN and GVH_CODE_VLG = PLACE_GVH do
		vh_vs.add(VLG_NAME, VLG_CODE);
	endfor;
	
	vh_vs.add("Add VLG", 999);
	
	
	setvalueset($,vh_vs);
PROC OTHER_VLG

preproc
	
	ask if PLACE_VLG = 999;
PROC PLACE_DISCR

PROC PLACE_GPS

preproc

// If the GPS coordinates were already captured do not capture them again.
if visualvalue(PLACE_LATITUDE(curocc())) <> notappl and visualvalue(PLACE_LONGITUDE(curocc())) <> notappl then
	skip to HH_DOOR_LABEL(curocc());
endif;

// Make "capture GPS" the default so operator just has to tap next
// to start GPS capture
//$ = 1;

postproc

if PLACE_LATITUDE(curocc()) = notappl or PLACE_LONGITUDE(curocc()) = notappl then

	// Capture GPS
	if not gps(open) then
		errmsg("Failed to start GPS reading. This device probably does not have GPS capabilities");
	else

		// Take GPS reading for up to 60 seconds or until 10m accuracy
		if gps(read, 60, 10) = 1 then
			// Copy reading to dictionary variables
			PLACE_LATITUDE(curocc()) = gps(Latitude);
			PLACE_LONGITUDE(curocc()) = gps(Longitude);

			errmsg("Coordinates captured successfully");
		else
			errmsg("Failed to read GPS! Retry")
				select("Yes",reenter,"No",continue);
		endif;
	endif;
	
	// Finished - close gps
	gps(close);
	
	
endif;

skip to HH_DOOR_LABEL(curocc());
PROC PLACE_LATITUDE

preproc
	
if PLACE_LATITUDE(curocc()) <> notappl then
	setproperty($, "Protected", "Yes");
	noinput;
endif;
PROC PLACE_LONGITUDE

preproc
			
		if PLACE_LONGITUDE(curocc()) <> notappl then
			setproperty($, "Protected", "Yes");
			noinput;
		endif;

PROC HH_DOOR_LABEL

preproc
	
	hh_label = maketext("LFS/%v/%v",edit("999",STRUCTURE_NUMBER(curocc())),staff_segment(INTERVIEWER_ID_CODE));
	
	HH_DOOR_LABEL(curocc()) = hh_label;
	
	
postproc
	
	HH_DOOR_LABEL(curocc()) = hh_label;
	
PROC MORE_STRCT

preproc
	
	warning("Just make sure you have labelled the household as %s!",maketext("LFS/%v/%v",edit("999",STRUCTURE_NUMBER(curocc())),staff_segment(INTERVIEWER_ID_CODE)));


postproc

	if $ = 1 then
		skip to next;
	endif;


{
PROC ANYMORE_HOUSEHOLD

if $=2 then
	warning("write structure number on the house door")
endif;
}
PROC CLOSE_EA


	if $ = 1 then
	
		endgroup;
		
	endif;

PROC END_TIME

preproc 

	if $ = Notappl then 
	
		$= timestamp();
		
	endif;
	
	
noinput;

postproc

	savepartial();
	
	//stop(1);

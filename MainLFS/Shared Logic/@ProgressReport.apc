// ------------------
// ------------------ Functions to simplify creating dynamic value sets
// ------------------


numeric HouseholdCompleteCount = 0; 	//To hold completed number of households
numeric HouseholdPartialCount  = 0; 	//To hold partially completed number of households
numeric HouseholdNewCount = 0;			//To hold non-interviewed number of households
numeric IndividualCompleteCount; 		//To hold completed number of Individuals 15-64
numeric IndividualPartialCount; 		//To hold partially complteted number of Individuals 15-64
numeric IndividualNewCount;				//To hold non-interviewed number of Individuals 15-64
numeric ChildCompleteCount;				//To hold ncompleted number of Children 5-17
numeric ChildPartialCount;				//To hold non-interviewed number of Children 5-17
numeric ChildNewCount;					//To hold non-interviewed number of Children 5-17
numeric NoHHsinCluster;					//Number of households within each cluster

file reportfile;

//Function to be included in the Report function. It just tells w
function EligibleMembersReport(string CurrentCase)
	numeric index = 1;
	//filewrite(reportfile, "");	
	//Eligible individuals in the household
	do numeric counter = 1 while counter <= GHHHSIZE 								
		if DEM_06(counter) in 15:64 then
			if loadcase(INDIVIDUALLFS_DICT,CurrentCase,edit("99",PPNO(counter))) and INDIVEND <> notappl then 
				inc(IndividualCompleteCount);
				filewrite(reportfile, "    Individual. %s.%-20s [%d] (COMPLETED)",edit("99",PPNO(counter)),DEM_NAME(counter),DEM_06(counter));
			elseif loadcase(INDIVIDUALLFS_DICT,CurrentCase,edit("99",PPNO(counter))) and INDIVEND = notappl then 
				inc(IndividualPartialCount);
				filewrite(reportfile, "    Individual. %s.%-28s (PARTIALLY SAVED)",edit("99",PPNO(counter)),DEM_NAME(counter));
			else
				filewrite(reportfile, "    Individual. %s.%-28s (NOT INTERVIEWED)",edit("99",PPNO(counter)),DEM_NAME(counter));
				inc(IndividualNewCount);
			endif;
															
			index = index + 1; 
		endif;								
	enddo;
	//filewrite(reportfile, "");		
	
							
	//Eligible children in the household
	do numeric counter = 1 while counter <= GHHHSIZE 								
		if DEM_06(counter) in 5:17 then
			if loadcase(CHILD_LABOUR_DICT,CurrentCase) and CHILD_END_RESULT <> notappl then 
				filewrite(reportfile, "    Child. %s.%s(%d) (COMPLETED)",edit("99",PPNO(counter)),DEM_NAME(counter),DEM_06(counter));
				inc(ChildCompleteCount);
			elseif loadcase(CHILD_LABOUR_DICT,CurrentCase) and CHILD_END_RESULT = notappl then 
				inc(ChildPartialCount);
				filewrite(reportfile, "    Child. %s.%s(%d) (PARTIALLY SAVED)",edit("99",PPNO(counter)),DEM_NAME(counter),DEM_06(counter));
			else
				inc(ChildNewCount);
				filewrite(reportfile, "    Child. %s.%s(%d) (NOT INTERVIEWED)",edit("99",PPNO(counter)),DEM_NAME(counter),DEM_06(counter));
			endif;
		endif;								
	enddo;
end;

function ClusterInterviewsProgressReport()
	
	list string workingHHs; 					//To hold a list of opened households (case ids)
	list string assignedHHs; 					//To hold a list of assigned households (case ids)
	numeric sumCheck, nextEntry = 1, userCheck;

	string startedHH, notVisited;				//To temporarily keep opened and no yet visited household details
	
	keylist(HOUSEHOLDLFS_DICT(startswith,maketext("%v",MCLUSTER)), workingHHs);
	keylist(ASSIGNED_HHS_DICT(startswith,maketext("%v",MCLUSTER)), assignedHHs);		//Filling in the household numbers (case ids) 
	
	string reportFilename = maketext("%sClusterInterviewsProgressReport.txt", pathname(Application));

	setfile(reportfile, reportFilename,create);
	
	filewrite(reportfile, "Cluster %s: %s, %s (%s)",maketext("%v",edit("9999",visualvalue(MCLUSTER))),strip(CDIST_NAME),strip(CTA_NAME),edit("9999",visualvalue(CEA)));
	filewrite(reportfile, "-------------------------------------------");
	filewrite(reportfile, "");
	filewrite(reportfile, "Summary Status of Progress for each Staff");
	filewrite(reportfile, "-------------------------------------------");
	filewrite(reportfile, "");
	
	//Assigned households and their corresponding Women and Biomarker questionnaires
	forcase TEAMS_DICT where TEAM_ID = TEAMNO do
		userCheck = 0;
		filewrite(reportfile,"%s. %s ",edit("99",nextEntry),INTRV_NAME);
		filewrite(reportfile, "---- --- --- ------------");
		do numeric reportTracker = 1 while reportTracker <= assignedHHs.length()
		sumCheck = 0; 
		
		//If user/interviewer was assigned household
		if USER_CODE = assignedHHs(reportTracker)[5:36] then
			
			do numeric hh_index = 1 while hh_index <=  workingHHs.length()
				loadcase(HOUSEHOLDLFS_DICT,assignedHHs(reportTracker));
				
				//If the assigned household was opened/started/interviewed
				if assignedHHs(reportTracker) = workingHHs(hh_index) then

					loadcase(HOUSEHOLDLFS_DICT,assignedHHs(reportTracker));
					if HH_CONCLUSION in 1:9 then	
						inc(HouseholdCompleteCount);
						filewrite(reportfile, "%s. %s:%-28s (COMPLETED)",assignedHHs(reportTracker)[41:2], maketext("%v%v",assignedHHs(reportTracker)[1:4],assignedHHs(reportTracker)[41:2]),strip(AHH_NAME));
							
						EligibleMembersReport(assignedHHs(reportTracker));						

							
					elseif HH_CONCLUSION = notappl then
						inc(HouseholdPartialCount);
						startedHH = maketext("%s. %s:%-28s (PARTIALLY SAVED)", assignedHHs(reportTracker)[41:2], maketext("%v%v",assignedHHs(reportTracker)[1:4],assignedHHs(reportTracker)[41:2]),strip(AHH_NAME));
						filewrite(reportfile, startedHH);
						
						EligibleMembersReport(assignedHHs(reportTracker));

					endif;					
					
				else //If the household has not been visited (opened)
					loadcase(ASSIGNED_HHS_DICT,assignedHHs(reportTracker));
						notVisited = maketext("%s. %s:%-28s (NOT VISITED)",assignedHHs(reportTracker)[41:2], maketext("%v%v",assignedHHs(reportTracker)[1:4],assignedHHs(reportTracker)[41:2]),AHH_NAME);
						sumCheck = sumCheck + 1;
					
				endif;			
			enddo;
			
			if sumCheck = workingHHs.length() then
				inc(HouseholdNewCount);
				filewrite(reportfile, notVisited);
			else
				//filewrite(reportfile, startedHH);
			endif;
		else
			userCheck = userCheck + 1;

		endif;
		
		if userCheck = assignedHHs.length() then
			filewrite(reportfile,"No household assigned");
		endif;
		
		enddo;
		nextEntry = nextEntry + 1;
	
		filewrite(reportfile, "----------------------------------------");
		filewrite(reportfile, "");
		
	endfor;
	
	loadcase(CLUSTERS_DICT);
	numeric AllComplete = HouseholdCompleteCount + IndividualCompleteCount + ChildCompleteCount;
	numeric AllPartial = IndividualPartialCount + ChildPartialCount;
	numeric AllNew = IndividualNewCount + ChildNewCount;
	numeric AllAivalable = NoHHsinCluster + IndividualCompleteCount + ChildCompleteCount;	
	
	
	if HouseholdCompleteCount = NoHHsinCluster and (IndividualPartialCount + ChildPartialCount + IndividualNewCount + ChildNewCount) = 0 then

		filewrite(reportfile, "Cluster Completed: %d of %d done- (%3.2f% Complete)",AllComplete,(AllPartial+AllNew+AllAivalable),(AllComplete/(AllPartial+AllNew+AllAivalable)*100));
	else
	
		filewrite(reportfile, "Cluster Incomplete- %d of %d done- (%3.2f% Complete)",AllComplete,(AllPartial+AllNew+AllAivalable),(AllComplete/(AllPartial+AllNew+AllAivalable)*100));		
	endif;
	
	numeric totalInterviews = HouseholdCompleteCount+HouseholdPartialCount+HouseholdNewCount;
	filewrite(reportfile, "           Completed  Partial    New     Total");
	filewrite(reportfile, "Household:      %-8d %-8d %-8d %-5d",
		HouseholdCompleteCount,HouseholdPartialCount,HouseholdNewCount,totalInterviews);
	
	totalInterviews = IndividualCompleteCount+IndividualPartialCount+IndividualNewCount;
	filewrite(reportfile, "Ind      :      %-8d %-8d %-8d %-5d",
		IndividualCompleteCount,IndividualPartialCount,IndividualNewCount,totalInterviews);
	
	totalInterviews	= ChildCompleteCount+ChildPartialCount+ChildNewCount;
	filewrite(reportfile, "Child    :      %-8d %-8d %-8d %-5d",
		ChildCompleteCount,ChildPartialCount,ChildNewCount,totalInterviews);
	
	
	{
	filewrite(reportfile, "Household:      %d     %d      %d",HouseholdCompleteCount,HouseholdPartialCount,HouseholdNewCount);
	filewrite(reportfile, "Ind Woman:      %d     %d      %d",IndividualCompleteCount,IndividualPartialCount,IndividualNewCount);
	filewrite(reportfile, "Biomarker:      %d     %d      %d",ChildCompleteCount,ChildPartialCount,ChildNewCount);
	}
	close(reportfile);
	
	if getos() = 20 then //Android
		execsystem(maketext("view:%s", reportFilename));
	elseif getos() = 10 then //Windows
		execsystem(maketext("explorer.exe %s", reportFilename));
	endif;
	
HouseholdCompleteCount = 0; HouseholdPartialCount = 0; HouseholdNewCount = 0;
IndividualCompleteCount = 0; IndividualPartialCount = 0; IndividualNewCount = 0;
ChildCompleteCount = 0; ChildPartialCount = 0; ChildNewCount = 0;


end;



function NewClusterInterviewsProgressReport()
	
	list string workingHHs; 					//To hold a list of opened households (case ids)
	list string assignedHHs; 					//To hold a list of assigned households (case ids)
	numeric sumCheck, nextEntry = 1, userCheck;

	string startedHH, notVisited;				//To temporarily keep opened and no yet visited household details
	
	keylist(HOUSEHOLDLFS_DICT(startswith,maketext("%v",MCLUSTER)), workingHHs);
	keylist(ASSIGNED_HHS_DICT(startswith,maketext("%v",MCLUSTER)), assignedHHs);		//Filling in the household numbers (case ids) 
	
	string reportFilename = maketext("%sClusterInterviewsProgressReport.txt", pathname(Application));

	setfile(reportfile, reportFilename,create);
	
	filewrite(reportfile, "Cluster %s: %s, %s (%s)",maketext("%v",edit("9999",visualvalue(MCLUSTER))),strip(CDIST_NAME),strip(CTA_NAME),edit("9999",visualvalue(CEA)));
	filewrite(reportfile, "-------------------------------------------");
	filewrite(reportfile, "");
	filewrite(reportfile, "Summary Status of Progress for each Staff");
	filewrite(reportfile, "-------------------------------------------");
	filewrite(reportfile, "");
	
	//Assigned households and their corresponding Women and Biomarker questionnaires
	forcase TEAMS_DICT where TEAM_ID = TEAMNO do
		userCheck = 0;
		filewrite(reportfile,"%s. %s ",edit("99",nextEntry),INTRV_NAME);
		filewrite(reportfile, "---- --- --- ------------");
		do numeric reportTracker = 1 while reportTracker <= assignedHHs.length()
		sumCheck = 0; 
		
		//If user/interviewer was assigned household
		if USER_CODE = assignedHHs(reportTracker)[5:36] then
			
			do numeric hh_index = 1 while hh_index <=  workingHHs.length()
				loadcase(HOUSEHOLDLFS_DICT,assignedHHs(reportTracker));
				
				//If the assigned household was opened/started/interviewed
				if assignedHHs(reportTracker) = workingHHs(hh_index) then

					loadcase(HOUSEHOLDLFS_DICT,assignedHHs(reportTracker));
					if HH_CONCLUSION in 1:9 then	
						inc(HouseholdCompleteCount);
						filewrite(reportfile, "%s. %s:%-28s (COMPLETED)",assignedHHs(reportTracker)[41:2], maketext("%v%v",assignedHHs(reportTracker)[1:4],assignedHHs(reportTracker)[41:2]),strip(AHH_NAME));
							
						EligibleMembersReport(assignedHHs(reportTracker));						

							
					elseif HH_CONCLUSION = notappl then
						inc(HouseholdPartialCount);
						startedHH = maketext("%s. %s:%-28s (PARTIALLY SAVED)", assignedHHs(reportTracker)[41:2], maketext("%v%v",assignedHHs(reportTracker)[1:4],assignedHHs(reportTracker)[41:2]),strip(AHH_NAME));
						filewrite(reportfile, startedHH);
						
						EligibleMembersReport(assignedHHs(reportTracker));

					endif;					
					
				else //If the household has not been visited (opened)
					loadcase(ASSIGNED_HHS_DICT,assignedHHs(reportTracker));
						notVisited = maketext("%s. %s:%-28s (NOT VISITED)",assignedHHs(reportTracker)[41:2], maketext("%v%v",assignedHHs(reportTracker)[1:4],assignedHHs(reportTracker)[41:2]),AHH_NAME);
						sumCheck = sumCheck + 1;
					
				endif;			
			enddo;
			
			if sumCheck = workingHHs.length() then
				inc(HouseholdNewCount);
				filewrite(reportfile, notVisited);
			else
				//filewrite(reportfile, startedHH);
			endif;
		else
			userCheck = userCheck + 1;

		endif;
		
		if userCheck = assignedHHs.length() then
			filewrite(reportfile,"No household assigned");
		endif;
		
		enddo;
		nextEntry = nextEntry + 1;
	
		filewrite(reportfile, "----------------------------------------");
		filewrite(reportfile, "");
		
	endfor;
	
	loadcase(CLUSTERS_DICT);
	numeric AllComplete = HouseholdCompleteCount + IndividualCompleteCount + ChildCompleteCount;
	numeric AllPartial = IndividualPartialCount + ChildPartialCount;
	numeric AllNew = IndividualNewCount + ChildNewCount;
	numeric AllAivalable = NoHHsinCluster + IndividualCompleteCount + ChildCompleteCount;	
	
	
	if HouseholdCompleteCount = NoHHsinCluster and (IndividualPartialCount + ChildPartialCount + IndividualNewCount + ChildNewCount) = 0 then

		filewrite(reportfile, "Cluster Completed: %d of %d done- (%3.2f% Complete)",AllComplete,(AllPartial+AllNew+AllAivalable),(AllComplete/(AllPartial+AllNew+AllAivalable)*100));
	else
	
		filewrite(reportfile, "Cluster Incomplete- %d of %d done- (%3.2f% Complete)",AllComplete,(AllPartial+AllNew+AllAivalable),(AllComplete/(AllPartial+AllNew+AllAivalable)*100));		
	endif;
	
	numeric totalInterviews = HouseholdCompleteCount+HouseholdPartialCount+HouseholdNewCount;
	filewrite(reportfile, "           Completed  Partial    New     Total");
	filewrite(reportfile, "Household:      %-8d %-8d %-8d %-5d",
		HouseholdCompleteCount,HouseholdPartialCount,HouseholdNewCount,totalInterviews);
	
	totalInterviews = IndividualCompleteCount+IndividualPartialCount+IndividualNewCount;
	filewrite(reportfile, "Ind      :      %-8d %-8d %-8d %-5d",
		IndividualCompleteCount,IndividualPartialCount,IndividualNewCount,totalInterviews);
	
	totalInterviews	= ChildCompleteCount+ChildPartialCount+ChildNewCount;
	filewrite(reportfile, "Child    :      %-8d %-8d %-8d %-5d",
		ChildCompleteCount,ChildPartialCount,ChildNewCount,totalInterviews);
	
	
	{
	filewrite(reportfile, "Household:      %d     %d      %d",HouseholdCompleteCount,HouseholdPartialCount,HouseholdNewCount);
	filewrite(reportfile, "Ind Woman:      %d     %d      %d",IndividualCompleteCount,IndividualPartialCount,IndividualNewCount);
	filewrite(reportfile, "Biomarker:      %d     %d      %d",ChildCompleteCount,ChildPartialCount,ChildNewCount);
	}
	close(reportfile);
	
	if getos() = 20 then //Android
		execsystem(maketext("view:%s", reportFilename));
	elseif getos() = 10 then //Windows
		execsystem(maketext("explorer.exe %s", reportFilename));
	endif;
	
HouseholdCompleteCount = 0; HouseholdPartialCount = 0; HouseholdNewCount = 0;
IndividualCompleteCount = 0; IndividualPartialCount = 0; IndividualNewCount = 0;
ChildCompleteCount = 0; ChildPartialCount = 0; ChildNewCount = 0;


end;
